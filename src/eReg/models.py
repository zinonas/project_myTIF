from django.db import models
from django.forms.extras.widgets import SelectDateWidget
from django.contrib.admin import widgets
from django.utils.encoding import smart_unicode
from datetime import date
# Create Demographic models here

class Demographic(models.Model):
    national_health_care_pat_id = models.IntegerField('National Health Care patient id', null=True,blank=True)
    patient_hospital_file_number = models.IntegerField(null=True,blank=True)
    patient_id = models.IntegerField(unique= True ,primary_key=True)
    given_name = models.CharField(max_length=30,null=True,blank=True)
    surname = models.CharField(max_length=30,null=True,blank=True)
    date_of_birth= models.DateField('Date of birth',null=True,blank=True)
    gender = models.CharField(max_length=6,null=True,blank=True)
    education = models.CharField(max_length=20,null=True,blank=True)
    profession= models.CharField(max_length=20,null=True,blank=True)
    family = models.CharField('Family name',max_length=15,null=True,blank=True)
    address_street = models.CharField(max_length=25,null=True,blank=True)
    address_no = models.IntegerField(null=True,blank=True)
    address_city = models.CharField(max_length=25,null=True,blank=True)
    address_post_code = models.IntegerField(null=True,blank=True)
    address_state = models.CharField(max_length=25,null=True,blank=True)
    address_country = models.CharField(max_length=25,null=True,blank=True)
    telephone = models.IntegerField(null=True,blank=True)
    email = models.EmailField('E-mail',null=True,blank=True)
    legal_org_name = models.CharField('Legal organisation name',max_length=30,null=True,blank=True)
    legal_org_phone = models.IntegerField('Legal organisation telephone number',null=True,blank=True)
    legal_org_email = models.EmailField('Legal organisation e-mail',null=True,blank=True)
    contact_person_role = models.CharField(max_length=20,null=True,blank=True)
    contact_person_name = models.CharField(max_length=30,null=True,blank=True)
    contact_person_surname = models.CharField(max_length=30,null=True,blank=True)
    contact_person_phone = models.IntegerField(null=True,blank=True)
    contact_person_email = models.EmailField('Contact person e-mail',null=True,blank=True)
    insurance_no = models.IntegerField('Insurance number',null=True,blank=True)

    def __str__(self):
        return str(self.patient_id)

class icd_10(models.Model):
    id = models.IntegerField(unique=True,primary_key=True,null=False,blank=False)
    icd_10_desc = models.CharField('ICD-10 description',max_length=80,null=True,blank=True)
    icd_10_code = models.CharField('ICD-10 code',max_length=10,null=True,blank=True)

    def __str__(self):
        return str(self.icd_10_desc)

class Diagnosis(models.Model):
    patient = models.ForeignKey(Demographic)
    age_of_diagnosis = models.IntegerField(null=True,blank=True)
    diagnosis_option_value = (
        ('', 'Please select a diagnosis'),
        ('b-thalassaemia syndromes', 'b-thalassaemia syndromes'),
        ('a-thalassaemia syndromes', 'a-thalassaemia syndromes'),
        ('Sickle cell syndromes', 'Sickle cell syndromes'),
        ('Other haemoglobin variants','Other haemoglobin variants'),
        ('Rare cell membrane disorders','Rare cell membrane disorders'),
        ('Rare cell enzyme disorders','Rare cell enzyme disorders'),
        ('Congenital desyrythropoietic anaemias','Congenital desyrythropoietic anaemias')
    )
    diagnosis_option = models.CharField( max_length=45,choices=diagnosis_option_value, default=diagnosis_option_value[0][0])
    record_of_genotype = models.CharField(max_length=45,null=True,blank=True)
    # icd_10_code = models.ForeignKey(icd_10)
    icd_10_code = models.CharField('ICD-10 code', max_length=20,null=True,blank=True)
    # icd_10_desc = models.CharField('ICD-10 description',max_length=80,null=True,blank=True)
    icd_10_desc = models.ForeignKey(icd_10)
    comment = models.CharField(max_length=100,null=True,blank=True)

    def __str__(self):
        return str(self.patient)

class A_b_sickle_thal (models.Model):
    patient= models.ForeignKey(Demographic)
    cbc = models.CharField(max_length=3, null=True, blank=True)
    hb = models.CharField(max_length=3, null=True, blank=True)
    mcv = models.CharField(max_length=3, null=True, blank=True)
    mch = models.CharField(max_length=3, null=True, blank=True)
    hba2  = models.CharField(max_length=3, null=True, blank=True)
    hbf  = models.CharField(max_length=3, null=True, blank=True)
    haemoglobin = models.CharField(max_length=3, null=True, blank=True)
    nrbc  = models.CharField(max_length=3, null=True, blank=True)
    reticulocytes = models.CharField(max_length=3, null=True, blank=True)
    red_cell_morphology  = models.CharField(max_length=20, null=True, blank=True)
    rare_anaemia  = models.CharField(max_length=25, null=True, blank=True)
    cell_acetate_electr  = models.CharField(max_length=3, null=True, blank=True)
    acid_agarose_citrate  = models.CharField(max_length=3, null=True, blank=True)
    isoelect_foc  = models.CharField(max_length=3, null=True, blank=True)
    hlpc_cap_elect = models.CharField(max_length=3, null=True, blank=True)
    quant_hba2  = models.CharField(max_length=3, null=True, blank=True)
    quant_hbh  = models.CharField(max_length=3, null=True, blank=True)
    quant_hbf  = models.CharField(max_length=3, null=True, blank=True)
    quant_other_var  = models.CharField(max_length=3, null=True, blank=True)
    conf_pres_hbs  = models.CharField(max_length=3, null=True, blank=True)
    conf_pres_hbe  = models.CharField(max_length=3, null=True, blank=True)
    conf_pres_un_haemo_isoprop_option  = models.CharField(max_length=3, null=True, blank=True)
    conf_pres_un_haemo_isoprop  = models.CharField(max_length=25, null=True, blank=True)
    conf_pres_un_haemo_heat_option = models.CharField(max_length=3, null=True, blank=True)
    conf_pres_un_haemo_heat = models.CharField(max_length=25, null=True, blank=True)
    conf_pres_un_haemo_ex_ir_transf_sat  = models.CharField(max_length=25, null=True, blank=True)
    conf_pres_un_haemo_ex_ir_transf_serum = models.CharField(max_length=25, null=True, blank=True)
    conf_pres_un_haemo_ex_ir_transf_zinc  = models.CharField(max_length=25, null=True, blank=True)
    mol_diag_a_thal_gap_pcr = models.CharField(max_length=3, null=True, blank=True)
    mol_diag_a_thal_gap_mpla = models.CharField(max_length=3, null=True, blank=True)
    mol_diag_a_thal_gap_seq = models.CharField(max_length=3, null=True, blank=True)
    mol_diag_b_thal_aso = models.CharField(max_length=25, null=True, blank=True)
    mol_diag_b_thal_reverse_dot_blot = models.CharField(max_length=25, null=True, blank=True)
    mol_diag_b_thal_oligonucl = models.CharField(max_length=25, null=True, blank=True)
    mol_diag_b_thal_arms = models.CharField(max_length=25, null=True, blank=True)
    mol_diag_b_thal_real_time_pcr = models.CharField(max_length=25, null=True, blank=True)
    mol_diag_b_thal_dgge = models.CharField(max_length=25, null=True, blank=True)
    mol_diag_b_thal_gap_pcr = models.CharField(max_length=25, null=True, blank=True)
    mol_diag_b_thal_mpla = models.CharField(max_length=25, null=True, blank=True)
    mol_diag_b_thal_seq_anal_a_gene = models.CharField(max_length=25, null=True, blank=True)
    mol_diag_b_thal_seq_anal_b_gene = models.CharField(max_length=25, null=True, blank=True)
    mol_diag_b_thal_seq_anal_g_gene  = models.CharField(max_length=25, null=True, blank=True)
    snp_gene  = models.CharField(max_length=10, null=True, blank=True)
    snp_code = models.CharField(max_length=10, null=True, blank=True)
    snp_allele1 = models.CharField(max_length=10, null=True, blank=True)
    snp_allele1_type  = models.CharField(max_length=10, null=True, blank=True)
    snp_allele2  = models.CharField(max_length=10, null=True, blank=True)
    snp_allele2_type = models.CharField(max_length=3, null=True, blank=True)

    def __str__(self):
        return str(self.patient)


class Redcell_enzyme_dis (models.Model):
    patient = models.ForeignKey(Demographic)
    enzymes_of_glycol_option = models.CharField(max_length=3, null=True, blank=True)
    enzymes_of_glycol = models.CharField(max_length=45, null=True, blank=True)
    hk_option = models.CharField(max_length=3, null=True, blank=True)
    hk = models.CharField(max_length=45, null=True, blank=True)
    gpi_option = models.CharField(max_length=3, null=True, blank=True)
    gpi = models.CharField(max_length=45, null=True, blank=True)
    pfk_option = models.CharField(max_length=3, null=True, blank=True)
    pfk = models.CharField(max_length=45, null=True, blank=True)
    g3ph_option = models.CharField(max_length=3, null=True, blank=True)
    g3ph = models.CharField(max_length=45, null=True, blank=True)
    pgk_option = models.CharField(max_length=3, null=True, blank=True)
    pgk = models.CharField(max_length=45, null=True, blank=True)
    pk_option = models.CharField(max_length=3, null=True, blank=True)
    pk_v = models.CharField(max_length=45, null=True, blank=True)
    tpi_option = models.CharField(max_length=3, null=True, blank=True)
    tpi = models.CharField(max_length=45, null=True, blank=True)
    ldh_option = models.CharField(max_length=3, null=True, blank=True)
    ldh = models.CharField(max_length=45, null=True, blank=True)
    adolase_option = models.CharField(max_length=3, null=True, blank=True)
    adolase = models.CharField(max_length=45, null=True, blank=True)
    enolase_option = models.CharField(max_length=3, null=True, blank=True)
    enolase = models.CharField(max_length=45, null=True, blank=True)
    bpgm_option = models.CharField(max_length=3, null=True, blank=True)
    bpgm = models.CharField(max_length=45, null=True, blank=True)
    mpgm_option = models.CharField(max_length=3, null=True, blank=True)
    mpgm = models.CharField(max_length=45, null=True, blank=True)
    pgm_option = models.CharField(max_length=3, null=True, blank=True)
    pgm = models.CharField(max_length=45, null=True, blank=True)
    enz_hexose_option = models.CharField(max_length=3, null=True, blank=True)
    enz_hexose = models.CharField(max_length=45, null=True, blank=True)
    g6pd_option = models.CharField(max_length=3, null=True, blank=True)
    g6pd = models.CharField(max_length=45, null=True, blank=True)
    no6pgd_option = models.CharField(max_length=3, null=True, blank=True)
    no6pgd = models.CharField(max_length=45, null=True, blank=True)
    gcs_option = models.CharField(max_length=3, null=True, blank=True)
    gcs = models.CharField(max_length=45, null=True, blank=True)
    gshs_option = models.CharField(max_length=3, null=True, blank=True)
    gshs = models.CharField(max_length=45, null=True, blank=True)
    gr_option = models.CharField(max_length=3, null=True, blank=True)
    gr = models.CharField(max_length=45, null=True, blank=True)
    gshpx_option = models.CharField(max_length=3, null=True, blank=True)
    gshpx = models.CharField(max_length=45, null=True, blank=True)
    gst_option = models.CharField(max_length=3, null=True, blank=True)
    gst = models.CharField(max_length=45, null=True, blank=True)
    enz_nuc_meta_option = models.CharField(max_length=3, null=True, blank=True)
    enz_nuc_meta = models.CharField(max_length=45, null=True, blank=True)
    ak_option = models.CharField(max_length=3, null=True, blank=True)
    ak = models.CharField(max_length=45, null=True, blank=True)
    pyr5nuc_option = models.CharField(max_length=3, null=True, blank=True)
    pyr5nuc = models.CharField(max_length=45, null=True, blank=True)
    pur_pyr_ratio_option = models.CharField(max_length=3, null=True, blank=True)
    pur_pur_ratio = models.CharField(max_length=45, null=True, blank=True)
    other_rbce_act_option = models.CharField(max_length=3, null=True, blank=True)
    other_rbce_act = models.CharField(max_length=45, null=True, blank=True)
    nadh_dia_option = models.CharField(max_length=3, null=True, blank=True)
    nadh_dia = models.CharField(max_length=45, null=True, blank=True)
    nadph_dia_option = models.CharField(max_length=3, null=True, blank=True)
    nadph_dia_act = models.CharField(max_length=45, null=True, blank=True)
    sod_option = models.CharField(max_length=3, null=True, blank=True)
    sod_act = models.CharField(max_length=45, null=True, blank=True)
    catalase_option = models.CharField(max_length=3, null=True, blank=True)
    catalase = models.CharField(max_length=45, null=True, blank=True)
    other_option = models.CharField(max_length=3, null=True, blank=True)
    other = models.CharField(max_length=45, null=True, blank=True)
    glycol_interm_option = models.CharField(max_length=3, null=True, blank=True)
    glycol_interm = models.CharField(max_length=45, null=True, blank=True)
    g6p_option = models.CharField(max_length=3, null=True, blank=True)
    g6p = models.CharField(max_length=45, null=True, blank=True)
    f6p_option = models.CharField(max_length=3, null=True, blank=True)
    f6p = models.CharField(max_length=45, null=True, blank=True)
    fbp_option = models.CharField(max_length=3, null=True, blank=True)
    fbp = models.CharField(max_length=45, null=True, blank=True)
    dhap_option = models.CharField(max_length=3, null=True, blank=True)
    dhap = models.CharField(max_length=45, null=True, blank=True)
    gap_option = models.CharField(max_length=3, null=True, blank=True)
    gap = models.CharField(max_length=45, null=True, blank=True)
    no2_3dpg_option = models.CharField(max_length=3, null=True, blank=True)
    no2_3dpg = models.CharField(max_length=45, null=True, blank=True)
    no3pga_option = models.CharField(max_length=3, null=True, blank=True)
    no3pga = models.CharField(max_length=45, null=True, blank=True)
    no2pga_option = models.CharField(max_length=3, null=True, blank=True)
    no2pga = models.CharField(max_length=45, null=True, blank=True)
    pep_option = models.CharField(max_length=3, null=True, blank=True)
    pep = models.CharField(max_length=45, null=True, blank=True)
    amp_option = models.CharField(max_length=3, null=True, blank=True)
    amp = models.CharField(max_length=45, null=True, blank=True)
    ab_option = models.CharField(max_length=3, null=True, blank=True)
    ab = models.CharField(max_length=45, null=True, blank=True)
    atp_option = models.CharField(max_length=3, null=True, blank=True)
    atp = models.CharField(max_length=45, null=True, blank=True)
    gssg_gsh_option = models.CharField(max_length=3, null=True, blank=True)
    gssg_gsp = models.CharField(max_length=45, null=True, blank=True)
    pyr_option = models.CharField(max_length=3, null=True, blank=True)
    pyr = models.CharField(max_length=45, null=True, blank=True)
    lact_option = models.CharField(max_length=3, null=True, blank=True)
    lact = models.CharField(max_length=45, null=True, blank=True)

    def __str__(self):
        return str(self.patient)

class Redcell_membrane_dis(models.Model):
    patient =  models.ForeignKey(Demographic)
    red_cell_morph_sm = models.CharField(max_length=3, null=True, blank=True)
    osm_fr_fresh_blood = models.CharField(max_length=3, null=True, blank=True)
    osm_fr_pre_incu_blood = models.CharField(max_length=3, null=True, blank=True)
    osm_fr_two_dif_nacl = models.CharField(max_length=3, null=True, blank=True)
    osm_fr_curve_str = models.CharField(max_length=45, null=True, blank=True)
    osm_fr_curve = models.CharField(max_length=3, null=True, blank=True)
    glt = models.CharField(max_length=3, null=True, blank=True)
    aglt = models.CharField(max_length=3, null=True, blank=True)
    cryohemolysis_tst = models.CharField(max_length=3, null=True, blank=True)
    pink_tst = models.CharField(max_length=3, null=True, blank=True)
    flow_commercial_tst = models.CharField(max_length=3, null=True, blank=True)
    sds_page_rbc_proteins = models.CharField(max_length=3, null=True, blank=True)
    ektacytometer = models.CharField(max_length=3, null=True, blank=True)
    lorrca = models.CharField(max_length=3, null=True, blank=True)
    rbc_retic_auto_prm = models.CharField(max_length=3, null=True, blank=True)
    molec_char_rna_dna_level = models.CharField(max_length=45, null=True, blank=True)
    method_best_sensi_speci = models.CharField(max_length=45, null=True, blank=True)

    def __str__(self):
        return str(self.patient)

class Cong_dyseryth_anaemia(models.Model):
    patient =  models.ForeignKey(Demographic)
    complt_blood_cnt = models.CharField(max_length=45, null=True, blank=True)
    abs_reticulo_cnt = models.CharField(max_length=45, null=True, blank=True)
    soluble_transf_recept = models.CharField(max_length=45, null=True, blank=True)
    bone_marrow_recept = models.CharField(max_length=45, null=True, blank=True)
    sds_page = models.CharField(max_length=45, null=True, blank=True)
    moleculare_analysis = models.CharField(max_length=45, null=True, blank=True)

    def __str__(self):
        return str(self.patient)


